{"version":3,"sources":["components/Common/Appbar.tsx","images/devto.png","images/medium.png","images/hashnode.png","components/Pages/Help/Help.tsx","components/Pages/Home/editor.js","redux/hooks.ts","redux/slices/BlogState.ts","components/Pages/Home/StubEditor.tsx","components/Pages/Home/Home.tsx","utilities/toast.ts","Api.ts","components/Pages/Publish/Publish.tsx","App.tsx","redux/store.ts","reportWebVitals.ts","index.tsx"],"names":["Appbar","back","history","useHistory","AppBar","position","Toolbar","variant","style","backgroundColor","height","IconButton","color","margin","padding","size","edge","sx","mr","onClick","goBack","ArrowBack","Typography","component","fontSize","cursor","push","Tooltip","title","placement","Box","display","xs","md","marginLeft","Badge","badgeContent","Help","justifyContent","href","src","medium","alt","hashnode","devto","EDITOR_TOOLS","embed","Embed","table","Table","paragraph","Paragraph","list","List","header","Header","marker","Marker","checklist","CheckList","delimiter","Delimiter","inlineCode","InlineCode","useAppSelector","useSelector","slice","createSlice","name","initialState","blog","blocks","data","text","id","type","time","version","reducers","set_blog","state","action","payload","BlogStateActions","actions","StubEditor","dispatch","useDispatch","useState","BlogState","setData","border","tools","onChange","api","width","Button","marginBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","borderRadius","Home","toast","configure","error","msg","baseUrl","process","Api","article","tags","hashnodeToken","mediumToken","devtoToken","HTMLarticle","totalMessages","Object","keys","length","i","Rows","content","j","Cols","k","No","items","t","NO","m","p","level","len","e","temp","JSONtoHTML","formData","JSON","stringify","axios","post","then","res","status","catch","err","console","response","Error","Publish","formik","useFormik","initialValues","onSubmit","values","a","publishArticle","handleSubmit","Grid","container","marginTop","direction","item","TextField","label","handleChange","value","required","ChipInput","getFieldProps","gutterBottom","App","path","exact","store","configureStore","reducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.983cc5f6.chunk.js","sourcesContent":["import React from 'react'\nimport Badge from '@mui/material/Badge'\nimport Tooltip from '@mui/material/Tooltip'\nimport { useHistory } from 'react-router-dom'\nimport { ArrowBack } from '@mui/icons-material'\nimport HelpIcon from '@mui/icons-material/Help'\nimport { AppBar, IconButton, Toolbar, Typography, Box } from '@mui/material'\n\nexport const Appbar: React.FC<{ back?: boolean}> = ({ back }) => {\n    let history = useHistory()\n    return (\n        <>\n            <AppBar position='static'>\n                <Toolbar variant='dense' style={{ backgroundColor: '#FEDBD0', height: '100px' }}>\n                    { back ? (\n                        <>\n                            <IconButton\n                                style={{ color: '#442C2E', margin: '1rem', padding: '0.5rem' }}\n                                size='large'\n                                edge='start'\n                                color='inherit'\n                                aria-label='menu'\n                                sx={{ mr: 2 }}\n                                onClick={() => {\n                                    history.goBack()\n                                }}\n                            >\n                                <ArrowBack />\n                            </IconButton>\n                        </>\n                    ) : (\n                        <>\n                        </>\n                    )}\n                    <Typography variant='h6' color='inherit' component='div' style={{ color: '#442C2E', fontSize: '48px', cursor: 'pointer' }} onClick={() => { history.push('/') }}>\n                        Blog Post\n                    </Typography>\n                    <Tooltip title='Help' placement='bottom'>\n                        <Box sx={{ display: { xs: 'none', md: 'flex' }, marginLeft: '0.5rem' }}>\n                            <IconButton size='large' aria-label='show 1 notification' color='inherit' style={{ color: '#442C2E' }} onClick={() => { history.push('/help') }}>\n                                <Badge badgeContent={1} color='error'>\n                                    <HelpIcon />\n                                </Badge>\n                            </IconButton>\n                        </Box>\n                    </Tooltip>\n                </Toolbar>\n            </AppBar>\n        </>\n    )\n}","export default __webpack_public_path__ + \"static/media/devto.1b9481b2.png\";","export default __webpack_public_path__ + \"static/media/medium.7621f727.png\";","export default __webpack_public_path__ + \"static/media/hashnode.1c4bd669.png\";","import React from 'react'\nimport { Typography } from '@mui/material'\nimport { Appbar } from '../../Common/Appbar'\nimport devto from '../../../images/devto.png'\nimport medium from '../../../images/medium.png'\nimport hashnode from '../../../images/hashnode.png'\n\nexport const Help: React.FC<{}> = () => {\n    return (\n        <>\n            <Appbar />\n            <p style={{ margin: '3rem' }} />\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Typography variant='h6' color='inherit' component='div' style={{ color: '#442C2E', fontSize: '32px', marginLeft: '3rem' }}>\n                    How to get <a href='https://medium.com/'>Medium.com</a> token?\n                </Typography>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <img src={medium} alt=\"Medium.com Guide\" />\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Typography variant='h6' color='inherit' component='div' style={{ color: '#442C2E', fontSize: '32px', marginLeft: '3rem' }}>\n                    How to get <a href='https://hashnode.com/'>Hashnode</a> token?\n                </Typography>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <img src={hashnode} alt=\"Hashnode Guide\" />\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Typography variant='h6' color='inherit' component='div' style={{ color: '#442C2E', fontSize: '32px', marginLeft: '3rem' }}>\n                    How to get <a href='https://dev.to/'>Dev.to</a> token?\n                </Typography>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <img src={devto} alt=\"Dev.to Guide\" />\n            </div>\n        </>\n    )\n}","import Embed from '@editorjs/embed'\nimport Table from '@editorjs/table'\nimport Paragraph from '@editorjs/paragraph'\nimport List from '@editorjs/list'\n// import Warning from '@editorjs/warning'\n// import Code from '@editorjs/code'\n// import LinkTool from '@editorjs/link'\n// import Image from '@editorjs/image'\n// import Raw from '@editorjs/raw'\nimport Header from '@editorjs/header'\n// import Quote from '@editorjs/quote'\nimport Marker from '@editorjs/marker'\nimport CheckList from '@editorjs/checklist'\nimport Delimiter from '@editorjs/delimiter'\nimport InlineCode from '@editorjs/inline-code'\n// import SimpleImage from '@editorjs/simple-image'\n\nexport const EDITOR_TOOLS = {\n    embed: Embed,\n    table: Table,\n    paragraph: Paragraph,\n    list: List,\n    header: Header,\n    marker: Marker,\n    checklist: CheckList,\n    delimiter: Delimiter,\n    inlineCode: InlineCode\n};\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ninterface BlogState {\n    blog: any\n}\n\nconst initialState: BlogState = {\n    blog: {\n        blocks: [{\n            data: {\n                text: \"// write it out!\"\n            },\n            id: \"w3ykgLRuwB\",\n            type: \"paragraph\"\n        }],\n        time: 1634646897293,\n        version: \"2.22.2\"\n    }\n}\n\nexport const slice = createSlice({\n    name: 'BlogState',\n    initialState,\n    reducers: {\n        set_blog: ( state, action: PayloadAction<any>) => {\n            state.blog = action.payload\n        }\n    }\n})\n\nexport const BlogStateActions = slice.actions\nexport default slice.reducer\n","import React, { useState } from 'react'\nimport Button from '@mui/material/Button'\nimport EditorJs from 'react-editor-js'\nimport { EDITOR_TOOLS } from './editor'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { useAppSelector } from '../../../redux/hooks'\nimport { BlogStateActions } from '../../../redux/slices/BlogState'\n\nexport const StubEditor: React.FC<{}> = () => {\n    let history = useHistory()\n    const dispatch = useDispatch()\n    const [data, setData] = useState(useAppSelector((state) => state.BlogState.blog))\n    return (\n        <>\n            <div style={{ border: '1px solid black', backgroundColor: '#fff', margin: '2rem' }}>\n                <EditorJs\n                    data={data}\n                    tools={EDITOR_TOOLS}\n                    onChange={\n                        (api: any, data: any) => {\n                            setData(data)\n                        }\n                    }\n                />\n            </div>\n            <div style={{ margin: 'auto', width: '10%' }}>\n                <Button\n                    variant='contained'\n                    onClick={() => {\n                        dispatch(BlogStateActions.set_blog(data))\n                        history.push('/publish')\n                    }}\n                    style={{\n                        backgroundColor: '#FEDBD0',\n                        color: '#442C2E',\n                        marginBottom: '3rem',\n                        paddingLeft: '1rem',\n                        paddingRight: '1rem',\n                        paddingTop: '0.5rem',\n                        paddingBottom: '0.5rem',\n                        borderRadius: '5px'\n                    }}\n                >\n                    Publish\n                </Button>\n            </div>\n        </>\n    )\n}","import React from 'react'\nimport { StubEditor } from './StubEditor'\nimport { Typography } from '@mui/material'\nimport { Appbar } from '../../Common/Appbar'\n\nexport const Home: React.FC<{}> = () => {\n    return (\n        <>\n            <Appbar />\n            <div style={{ display: 'flex', justifyContent: 'center', margin: '1rem' }}>\n                <Typography variant='h6' color='inherit' component='div' style={{ color: '#442C2E', fontSize: '32px', cursor: 'pointer' }}>\n                    draft YOUR thoughts below :))\n                </Typography>\n            </div>\n            <StubEditor />\n        </>\n    )\n}","import { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure()\n\nexport const _alert = toast\nexport const error = (msg: string) => toast(msg, { type: 'error' })\nexport const info = (msg: string) => toast(msg, { type: 'info' })\nexport const success = (msg: string) => toast(msg, { type: 'success' })\n","import axios from 'axios'\nimport { error, success } from './utilities/toast'\nconst baseUrl = process.env.REACT_APP_SERVER_URL\n\nexport const resolve_url = (link: string) => {\n\treturn new URL(link, baseUrl).href\n}\n\nexport function getUrl(image: string) {\n\ttry {\n\t\tnew URL(image)\n\t} catch (_) {\n\t\treturn resolve_url(`uploads/${image}`)\n\t}\n\treturn image\n}\n\nfunction JSONtoHTML(article: any) {\n    var totalMessages = Object.keys(article.blocks).length;\n    let text='';\n\n    for(var i=0;i<totalMessages;i++) {\n        var type=article.blocks[i].type;\n        if(type === 'paragraph') {\n             text += '<p>';\n             text += article.blocks[i].data.text;\n             text += '</p>';\n        } else if(type === 'table') {\n            text += '<table>';\n            var Rows=article.blocks[i].data.content.length;\n            for(var j=0;j<Rows;j++) {\n                text += '<tr>';\n                var Cols=article.blocks[i].data.content[j].length;\n                for(var k=0;k<Cols;k++) {\n                    text += '<td>';\n                    text += article.blocks[i].data.content[j][k];\n                    text += '</td>';\n                }\n                text += '</tr>';\n            }\n            text += '</table>';\n        } else if(type === 'list') {\n            if(article.blocks[i].data.style === 'ordered') {\n                text += '<ol>';\n                var No=article.blocks[i].data.items.length;\n                for(var t=0;t<No;t++) {\n                    text += '<li>';\n                    text += article.blocks[i].data.items[t];\n                    text += '</li>';\n                }\n                text += '</ol>';\n            }\n            else {\n                text += '<ul>';\n                var NO=article.blocks[i].data.items.length;\n                for(var m=0;m<NO;m++) {\n                    text += '<li>';\n                    text += article.blocks[i].data.items[m];\n                    text += '</li>';\n                }\n                text += '</ul>';\n            }\n        } else if(type === 'header') {\n            var p=article.blocks[i].data.level;\n            text += '<h'+p+'>';\n            text += article.blocks[i].data.text;\n            text += '</h'+p+'>';\n        } else if(type === 'checklist') {\n            var len=article.blocks[i].data.items.length;\n            for(var e=0;e<len;e++) {\n                var temp='a'+e;\n                text += '<input type=\\'checkbox\\'';\n                text += ' id='+temp+' name='+temp;\n                text += '>';\n                text += '<label for='+temp+'>';\n                text += article.blocks[i].data.items[e].text;\n                text += '</label>';\n            }\n        } else if(type === 'delimiter') {\n            text += '<hr>'\n        }\n    }\n    return text;\n}\n\nexport class Api {\n    static publishArticle(article: any, title: string, tags: string[], hashnodeToken: string, mediumToken: string, devtoToken: string) {\n        var HTMLarticle = JSONtoHTML(article)\n\n        var content: any = {}\n        content['title'] = title\n        content['contentFormat'] = 'html'\n        content['content'] = HTMLarticle\n        content['tags'] = tags\n        content['publishStatus'] = 'public'\n\n        var formData: any = {}\n        formData['content'] = JSON.stringify(content)\n        if(hashnodeToken) {\n            formData['hashnodeToken'] = hashnodeToken\n            formData['hashnode'] = 'True'\n        } else\n            formData['hashnode'] = 'False'\n        if(mediumToken) {\n            formData['mediumToken'] = mediumToken\n            formData['medium'] = 'True'\n        } else\n            formData['medium'] = 'False'\n        if(devtoToken) {\n            formData['devtoToken'] = devtoToken\n            formData['devto'] = 'True'\n        } else\n            formData['devto'] = 'False'\n\n        try {\n            return (\n                axios.post(baseUrl + 'post', JSON.stringify(formData))\n                .then((res) => {\n                    if(res.status === 200) {\n                        success('Article published')\n                        return true\n                    }\n                    return false\n                })\n                .catch((err) => {\n                    error('Error publishing article')\n                    return false\n                })\n            )\n        } catch (err) {\n            error('Error publishing article')\n            return false\n        }\n    }\n\n    private static handleError(err: any, msg: string = '') {\n\t\tconsole.error(err)\n\t\tif (err.response) {\n\t\t\tconsole.error(err?.response?.data)\n\t\t\tconsole.error(err?.response?.status)\n\t\t}\n\t\tthrow new Error(msg)\n\t}\n}","import React from 'react'\nimport './publish.css'\nimport { useFormik } from 'formik'\nimport { Api } from '../../../Api'\nimport { Appbar } from '../../Common/Appbar'\nimport { Field, FormikProvider } from 'formik'\nimport { error } from '../../../utilities/toast'\nimport { useAppSelector } from '../../../redux/hooks'\nimport { ChipInput } from 'material-ui-formik-components'\nimport { TextField, Button, Grid, Typography } from '@mui/material'\n\nexport const Publish: React.FC<{}> = () => {\n    const blog = useAppSelector((state) => state.BlogState.blog)\n    const formik = useFormik({\n        initialValues: {\n          title: '',\n          tags: [],\n          mediumToken: '',\n          devtoToken: '',\n          hashnodeToken: ''\n        },\n        onSubmit: async (values: any) => {\n            if(!values.hashnodeToken && !values.mediumToken && !values.devtoToken) {\n                error('Enter atleast one token to proceed.')\n                return;\n            }\n            await Api.publishArticle(blog, values.title, values.tags, values.hashnodeToken, values.mediumToken, values.devtoToken)\n        },\n    })\n    return (\n        <>\n            <Appbar back={ true } />\n            <div>\n                <form onSubmit={formik.handleSubmit}>\n                    <Grid container style={{ marginTop: '3rem', marginBottom: '3rem' }}>\n                        <Grid\n                            container\n                            direction='row'\n                            justifyContent='center'\n                        >\n                            <Grid item xs={6}>\n                                <h1 style={{ color: '#442C2E' }}>Little more information about the blog!</h1>\n                                <p style={{ color: '#442C2E' }}>Read about how to get tokens <a href='/#/help'>here</a></p>\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            container\n                            direction='row'\n                            justifyContent='center'\n                        >\n                            <Grid item xs={3}>\n                                <TextField\n                                    style={{ margin: '1rem' }}\n                                    id='title'\n                                    name='title'\n                                    label='Blog Title'\n                                    variant='outlined'\n                                    onChange={formik.handleChange}\n                                    value={formik.values.title}\n                                    required\n                                />\n                            </Grid>\n                            <FormikProvider value={formik}>\n                                <Grid item xs={3}>\n                                    <Field\n                                        component={ChipInput}\n                                        label='Blog tags'\n                                        variant='outlined'\n                                        {...formik.getFieldProps('tags')}\n                                    />\n                                </Grid>\n                            </FormikProvider>\n                        </Grid>\n                        <Grid\n                            container\n                            direction='row'\n                            justifyContent='center'\n                        >\n                            <Grid item xs={3}>\n                                <Typography variant='h4' component='div' gutterBottom style={{ color: '#442C2E', marginTop: '1.5rem' }}>Medium Token:</Typography>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField\n                                    style={{ margin: '1rem' }}\n                                    id='mediumToken'\n                                    name='mediumToken'\n                                    label='Medium Token'\n                                    variant='outlined'\n                                    onChange={formik.handleChange}\n                                    value={formik.values.mediumToken}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            container\n                            direction='row'\n                            justifyContent='center'\n                        >\n                            <Grid item xs={3}>\n                                <Typography variant='h4' component='div' gutterBottom style={{ color: '#442C2E', marginTop: '1.5rem' }}>Dev.to Token:</Typography>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField\n                                    style={{ margin: '1rem' }}\n                                    id='devtoToken'\n                                    name='devtoToken'\n                                    label='Dev.to Token'\n                                    variant='outlined'\n                                    onChange={formik.handleChange}\n                                    value={formik.values.devtoToken}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            container\n                            direction='row'\n                            justifyContent='center'\n                        >\n                            <Grid item xs={3}>\n                                <Typography variant='h4' component='div' gutterBottom style={{ color: '#442C2E', marginTop: '1.5rem' }}>Hashnode Token:</Typography>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField\n                                    style={{ margin: '1rem' }}\n                                    id='hashnodeToken'\n                                    name='hashnodeToken'\n                                    label='Hash node Token'\n                                    variant='outlined'\n                                    onChange={formik.handleChange}\n                                    value={formik.values.hashnodeToken}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <div style={{ margin: 'auto', width: '10%' }}>\n                        <Button\n                            variant='contained'\n                            type='submit'\n                            style={{\n                                backgroundColor: '#FEDBD0',\n                                color: '#442C2E',\n                                marginBottom: '3rem',\n                                paddingLeft: '1rem',\n                                paddingRight: '1rem',\n                                paddingTop: '0.5rem',\n                                paddingBottom: '0.5rem',\n                                borderRadius: '5px'\n                            }}\n                        >\n                            Lessgo!\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        </>\n    )\n}","import React from 'react'\nimport { Help } from './components/Pages/Help/Help'\nimport { Home } from './components/Pages/Home/Home'\nimport { Publish } from './components/Pages/Publish/Publish'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <>\n      <HashRouter>\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/publish' component={Publish} />\n          <Route path='/help' component={Help} />\n        </Switch>\n      </HashRouter>\n    </>\n  )\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\nimport BlogState from './slices/BlogState'\n\nexport const store = configureStore({\n\treducer: {\n        BlogState: BlogState\n\t},\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n\t\t<Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}